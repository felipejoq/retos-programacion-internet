/**
El Grinch ha estado haciendo de las suyas en el Polo Norte y ha sembrado bombas de carbÃ³n explosivo ðŸ’£ en la fÃ¡brica de juguetes de los duendes. Quiere que todos los juguetes queden inutilizados y por eso ha dejado una cuadrÃ­cula donde algunas celdas tienen carbÃ³n explosivo (true) y otras estÃ¡n vacÃ­as (false).

Los duendes necesitan tu ayuda para mapear las zonas peligrosas. Cada celda vacÃ­a debe mostrar un nÃºmero que indique cuÃ¡ntas bombas de carbÃ³n explosivo hay en las posiciones adyacentes, incluidas las diagonales.

detectBombs([
  [true, false, false],
  [false, true, false],
  [false, false, false]
])
// [
//   [1, 2, 1],
//   [2, 1, 1],
//   [1, 1, 1]
// ]

detectBombs([
  [true, false],
  [false, false]
])
// [
//   [0, 1],
//   [1, 1]
// ]

detectBombs([
  [true, true],
  [false, false],
  [true, true]
])

// [
//   [1, 1],
//   [4, 4],
//   [1, 1]
// ]
Nota: Â¿Quieres una pista? Seguro que has jugado al juego de buscaminas antesâ€¦ ðŸ˜‰
 */

/**
 * @param {boolean[][]} grid
 * @returns {number[][]}
 */
function detectBombs(grid) {
    const rows = grid.length;
    const cols = grid[0].length;
    const result = Array.from({ length: rows }, () => Array(cols).fill(0));

    for (let i = 0; i < rows; i++) {
        for (let j = 0; j < cols; j++) {
            if (grid[i][j]) {
                for (let x = -1; x <= 1; x++) {
                    for (let y = -1; y <= 1; y++) {
                        const r = i + x;
                        const c = j + y;
                        if (r >= 0 && r < rows && c >= 0 && c < cols) {
                            result[r][c]++;
                        }
                    }
                }
                result[i][j]--; // Subtract the bomb itself
            }
        }
    }

    return result;
}